### Deployment ###
# It manages a set of identical pods, ensuring that the specified number of replicas are running at all times
kind: Deployment
apiVersion: apps/v1
metadata:
  name: deployment-python                         # The name of the Deployment
spec:
  replicas: 1                                     # The number of replicas to run
  selector:                                       # The selector for the pods that this Deployment manages
    matchLabels:
      app: python-app
  template:                                       # The template for the pods that this Deployment manages
    metadata:
      labels:                                     # The labels for the pods
        app: python-app
    spec:
      containers:
        - name: python-app-container              # The name of the container
          image: python-image:latest              # The image to run in the container
          ports:
            - name: http                          # The port that the container is listening on
              containerPort: 8080
              protocol: TCP


### Service ###
# It exposes an application running on a set of Pods as a network service
---
kind: Service
apiVersion: v1
metadata:
  name: service-python                            # The name of the Service
spec:
  ports:
    - name: http-8080                             # The port that the Service is listening on
      port: 8080
      protocol: TCP
      targetPort: 8080                            # The port that the Service is forwarding to
  selector:                                       # The selector for the pods that this Service is forwarding to
    app: python-app


### Route ###
# It exposes a service at a host name, so that external clients can reach it by name
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: route-python                              # The name of the Route
spec:
  to:                                             # The service that the Route is forwarding to
    kind: Service
    name: service-python
    weight: 100
  port:                                           # The port that the Route is forwarding to
    targetPort: http-8080
  wildcardPolicy: None                            # The wildcard policy for the Route